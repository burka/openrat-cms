(function(e){if(typeof exports=='object'&&typeof module=='object')e(require('../../lib/codemirror'));else if(typeof define=='function'&&define.amd)define(['../../lib/codemirror'],e);else e(CodeMirror)})(function(e){'use strict';function t(e){var t=e.match(/^\s*\S/);e.skipToEnd();return t?'error':null};e.defineMode('asciiarmor',function(){return{token:function(e,r){var i;if(r.state=='top'){if(e.sol()&&(i=e.match(/^-----BEGIN (.*)?-----\s*$/))){r.state='headers';r.type=i[1];return'tag'};return t(e)}
else if(r.state=='headers'){if(e.sol()&&e.match(/^\w+:/)){r.state='header';return'atom'}
else{var n=t(e);if(n)r.state='body';return n}}
else if(r.state=='header'){e.skipToEnd();r.state='headers';return'string'}
else if(r.state=='body'){if(e.sol()&&(i=e.match(/^-----END (.*)?-----\s*$/))){if(i[1]!=r.type)return'error';r.state='end';return'tag'}
else{if(e.eatWhile(/[A-Za-z0-9+\/=]/)){return null}
else{e.next();return'error'}}}
else if(r.state=='end'){return t(e)}},blankLine:function(e){if(e.state=='headers')e.state='body'},startState:function(){return{state:'top',type:null}}}});e.defineMIME('application/pgp','asciiarmor');e.defineMIME('application/pgp-encrypted','asciiarmor');e.defineMIME('application/pgp-keys','asciiarmor');e.defineMIME('application/pgp-signature','asciiarmor')});