
# Konfiguration für mod-security.
# Status: In Arbeit.

<IfModule mod_security.c>

    # Filter anschalten - kann per VHost (de-)aktiviert werden
    SecFilterEngine On 
    #SecFilterEngine DynamicOnly
    #

    # Pruefung von URL-Encoding aktivieren
    SecFilterCheckURLEncoding On
    
    # Unicode-Validierung aktivieren
    SecFilterCheckUnicodeEncoding On
    
    # HTTP-POST-Daten verarbeiten
    SecFilterScanPOST On
    SecFilterSelective HTTP_Content-Type "!(^$|^application/x-www-form-urlencoded$|^multipart/form-data;)"

    # Require Content-Length to be provided with
    # every POST request
    SecFilterSelective REQUEST_METHOD "^POST$" chain
    SecFilterSelective HTTP_Content-Length "^$"

    # Deaktivieren von "Chunked Transfer Encoding
    SecFilterSelective HTTP_Transfer-Encoding "!^$"

    #SecFilterForceByteRange 32 126
    SecFilterForceByteRange 32 160
    
    # Standard-Aktion für zutreffende Filterregeln
    SecFilterDefaultAction "deny,log,status:403"
    #SecFilterDefaultAction "deny,log,status:'Aktuelle sicherheitseinstellungen verbieten einen Zugriff auf diese Seite'"
			   
    # Filterregeln aus mod-security.d einbinden
    # Include /etc/mod-security.d/[^.#]*

    SecAuditEngine RelevantOnly
    SecAuditLog /tmp/security-audit.log

    # ServerSignature fälschen - erfordert ServerTokens Full 
    #SecServerSignature "OpenRat Server"

    SecFilter /bin/sh




    # Bilder und andere statische Dateien
    SecFilterSelective REQUEST_FILENAME "^.*\.(png|jpe?g|gif|css|js)$" allow
    
    # SecFilterSelective ARG_action "^$" chain
    # SecFilterSelective ARG_subaction "^$" chain
    # Startseite
    SecFilterSelective REQUEST_URI "^.*/$" allow
    #SecFilterSelective SCRIPT_FILENAME "!^do\.php[3-5]?$"




    # Parameter Whitelist
    SecFilterSelective ARGS_NAMES "!^(subaction|action|oi|id|login_name|login_password|elementid|dbid|ok|screenwidth)$"
    # 
    SecFilterSelective ARGS_NAMES "xxx"



    # Einzelne Parameter
    SecFilterSelective ARG_id "!^[0-9-]*$"
    
    SecFilterSelective ARG_login_name "!^[A-Za-z0-9_-]*$"
    SecFilterSelective ARG_login_password "!^[A-Za-z0-9_-]*$"
    
    SecFilterSelective ARG_action "!^[a-z]*$"
    SecFilterSelective ARG_subaction "!^[a-z]*$"

    SecFilterSelective ARG_oi "!^[a-f0-9]*$"
    SecFilterSelective ARG_elementid "!^[0-9]*$"
    SecFilterSelective ARG_dbid "!^[a-zA-Z0-9_-]*$"


    
    # Aktionen    
    SecFilterSelective ARG_action "^folder$" chain
    SecFilterSelective ARG_subaction "^(|show|save|create|pub|prop|rights)$" allow

    SecFilterSelective ARG_action "^page$" chain
    SecFilterSelective ARG_subaction "^(|show|save|edit|el|pub|prop|src|rights)$" allow

    SecFilterSelective ARG_action "^file$" chain
    SecFilterSelective ARG_subaction "^(|show|save|pub|prop|rights)$" allow

    SecFilterSelective ARG_action "^link$" chain
    SecFilterSelective ARG_subaction "^(|show|save|pub|prop|rights)$" allow

    SecFilterSelective ARG_action "^index$" chain
    SecFilterSelective ARG_subaction "^(|project|object|projectmenu|administration|changepassword|register|password|showlogin|login|logout)$" allow

    SecFilterSelective ARG_action "^pageelement$" chain
    SecFilterSelective ARG_subaction "^(|save|editlink|editlongtext|archivelink|archivelongtext|diff)$" allow

    SecFilterSelective ARG_action "^(main|mainmenu)$" chain
    SecFilterSelective ARG_subaction "^(folder|page|pageelement|file|link|template|language|model|search|project|user|group)$" allow
    
    SecFilterSelective ARG_action "^template$" chain
    SecFilterSelective ARG_subaction "^(|prop|el|listing|show|edit|src)$" allow
    
    SecFilterSelective ARG_action "^tree$" chain
    SecFilterSelective ARG_subaction "^(load|open|close)$" allow

    SecFilterSelective ARG_action "^border$" chain
    SecFilterSelective ARG_subaction "^(|show)$" allow

    SecFilterSelective ARG_action "^background$" chain
    SecFilterSelective ARG_subaction "^(|show)$" allow

    SecFilterSelective ARG_action "^title$" chain
    SecFilterSelective ARG_subaction "^(|show)$" allow

    SecFilterSelective ARG_action "^treetitle$" chain
    SecFilterSelective ARG_subaction "^(|show)$" allow

    SecFilterSelective ARG_action "^model$" chain
    SecFilterSelective ARG_subaction "^(|list|setdefault|save|edit|remove)$" allow

    SecFilterSelective ARG_action "^language$" chain
    SecFilterSelective ARG_subaction "^(|listing|add|edit|remove)$" allow

    SecFilterSelective ARG_action "^search$" chain
    SecFilterSelective ARG_subaction "^(|prop|value)$" allow

    SecFilterSelective ARG_action "^project$" chain
    SecFilterSelective ARG_subaction "^(|listing|edit|save|add|remove|maintanance)$" allow

    SecFilterSelective ARG_action "^user$" chain
    SecFilterSelective ARG_subaction "^(|listing|edit|save|add|remove|groups|pw|rights)$" allow

    SecFilterSelective ARG_action "^group$" chain
    SecFilterSelective ARG_subaction "^(|listing|edit|save|add|remove|users)$" allow

    # Fallback: Alles ablehnen.
    SecFilter ".*" 

    # Ausgabe-Filterung
    SecFilterScanOutput On
    SecFilterSelective OUTPUT "Fatal error:" deny,status:500
    SecFilterSelective OUTPUT "Parse error:" deny,status:500
    
</IfModule>
